# $File: //ASP/tec/epics/processStatus/trunk/processStatusSup/Db/process_status.template $
# $Revision: #1 $
# $DateTime: 2023/05/13 17:23:14 $
# Last checked in by: $Author: starritt $
#
# Description
# process status template.
#
# Formal parameters
# PROCESS - process name - used as record name prefix
# PORT    - associated ASYN port name as defines in st.cmd file, or similar.
# DESC    - description string, must be <= 32 chars.
#
# Copyright (c) 2016-2023 Australian Synchrotron
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# Licence as published by the Free Software Foundation; either
# version 3 of the Licence, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public Licence for more details.
#
# You should have received a copy of the GNU Lesser General Public
# Licence along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Original author: <name>
# Maintained by:   <name>
#
# Contact details:
# as-open-source@ansto.gov.au
# 800 Blackburn Road, Clayton, Victoria 3168, Australia.
#

# Provides indication of processes that match selection criteria.
#
record (mbbi, "$(PROCESS):STATUS") {
    field (DESC, "$(DESC) status")
    field (SCAN, "2 second")
    field (DTYP, "asynUInt32Digital")

    # format:     @asynMask(port addr mask timeout) userParams
    field (INP,  "@asynMask($(PORT) 0 7 0) STATUS")
    field (UNSV, "INVALID")

    field (ZRST, "Unknown")
    field (ZRSV, "INVALID")
    field (ZRVL, "0")

    field (ONST, "Stopped")
    field (ONSV, "MAJOR")
    field (ONVL, "1")

    field (TWST, "Running")
    field (TWSV, "NO_ALARM")
    field (TWVL, "2")

    field (THST, "Multiple")
    field (THSV, "MINOR")
    field (THVL, "3")

    field (FLNK, "$(PROCESS):COUNT")
}

# Provides count of processes that match selection criteria.
#
record (longin, "$(PROCESS):COUNT") {
    field (DESC, "$(DESC) count")
    field (SCAN, "Passive")
    field (DTYP, "asynInt32")

    # format:     @asyn(port addr timeout) userParams
    field (INP,  "@asyn($(PORT) 0 0) COUNT")
    field (LOPR, "0")
    field (HOPR, "100")
    field (FLNK, "$(PROCESS):PID")
}

# Provides pid, if/when a unique process id matches selection criteria or 0.
#
record (longin, "$(PROCESS):PID") {
    field (DESC, "$(DESC) pid")
    field (SCAN, "Passive")
    field (DTYP, "asynInt32")

    # format:     @asyn(port addr timeout) userParams
    field (INP,  "@asyn($(PORT) 0 0) PID")
    field (LOPR, "0")
    field (HOPR, "32768")
    field (LOW,  "0")
    field (LSV,  "MINOR")
}

# end
